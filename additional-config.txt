#Configure Docker Jenkins plugin when runnning Jenkins inside Dockers.

# To configure Docker URI on CentOS 7+
 Edit file : "/usr/lib/systemd/system/docker.service"
 Modify ExecStart with customized Port and IP. See below: 
 'ExecStart=/usr/bin/dockerd -H tcp://10.0.1.2:4243 -H unix:///var/run/docker.sock'
 systemctl daemon-reload
 systemctl restart docker




Task: Configure Plugin
This step configures the plugin to communicate with a Docker host/daemon.

Once again, select Manage Jenkins.
Select Configure System to access the main Jenkins settings.
At the bottom, there is a dropdown called Add a new cloud. Select Docker from the list.
The Docker Host URI is where Jenkins launches the agent container. In this case, we'll use the same daemon as running Jenkins, but you could split the two for scaling. Enter the URL tcp://172.17.0.9:2345
Use Test Connection to verify Jenkins can talk to the Docker Daemon. You should see the Docker version number returned.
The Host IP address is the IP of your build agent / Docker Host.

Task: Configure Docker Agent Template
The Docker Agent Template is the Container which will be started to handle your build process.

Click Docker Agent templates... and then Add Docker Template. You can now configure the container options.

Set the label of the agent to docker-agent. This is used by the Jenkins builds to indicate it should be built via the Docker Agent we're defining.

For the Docker Image, use benhall/dind-jenkins-agent:v2. This image is configured with a Docker client and available at https://hub.docker.com/r/benhall/dind-jenkins-agent/

Under Container Settings, In the "Volumes" text box enter /var/run/docker.sock:/var/run/docker.sock. This allows our build container to communicate with the host.

For Connect Method select Connect with SSH. The image is based on the Jenkins SSH Slave image meaning the default Inject SSH key will handle the authenication.

Click Save.

Jenkins can now start a Build Agent as a container when required.
